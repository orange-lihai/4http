apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

task copyWebFiles(type: Copy) {
  from("src/main/resources/web/")
  into("$buildDir/web")
}
task copyConfigFiles(type: Copy) {
  from("src/main/resources/config/")
  into("$buildDir/config")
}
task copyReadMeFile {
  outputs.file new File("$buildDir/README.md")
  doLast {
    copy {
      from "README.md"
      into "$buildDir"
    }
  }
}
startScripts {
  classpath += files('src/main/resources/config')
  classpath += files('src/main/resources/web')
  doLast {
    def windowsScriptFile = file getWindowsScript()
    windowsScriptFile.text = windowsScriptFile.text.replace("%APP_HOME%\\lib\\config", "%APP_HOME%\\config")
    windowsScriptFile.text = windowsScriptFile.text.replace("%APP_HOME%\\lib\\web", "%APP_HOME%\\web")
    windowsScriptFile.text = windowsScriptFile.text.replace(
        '-classpath "%CLASSPATH%"',
        '-classpath "%APP_HOME%;%CLASSPATH%"'
    )
    def unixScriptFile = file getUnixScript()
    unixScriptFile.text = unixScriptFile.text.replace('$APP_HOME/lib/config', '$APP_HOME/config')
    unixScriptFile.text = unixScriptFile.text.replace('$APP_HOME/lib/web', '$APP_HOME/web')
    unixScriptFile.text = unixScriptFile.text.replace(
        '-classpath "$CLASSPATH"',
        '-classpath "$APP_HOME:$CLASSPATH"'
    )
  }
}
applicationDefaultJvmArgs = ["-Dgreeting.language=en"]
applicationDistribution.from(copyReadMeFile) { into("") }
applicationDistribution.from(copyConfigFiles) { into("config") }
applicationDistribution.from(copyWebFiles) { into("web") }

applicationName="churenBiz"
mainClassName = 'cn.churen.biz.Application'
sourceCompatibility = 1.8
version = '1.0'

repositories {
  mavenLocal()
  maven { url "http://maven.oschina.net/content/groups/public/" }
  mavenCentral()
}

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

dependencies {
  compile 'org.glassfish.grizzly:grizzly-http-server:2.4.0'
  compile  'mysql:mysql-connector-java:5.1.38'

  // https://mvnrepository.com/artifact/com.google.code.gson/gson
  compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
  // https://mvnrepository.com/artifact/org.reflections/reflections
  compile group: 'org.reflections', name: 'reflections', version: '0.9.11'
  // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
  // https://mvnrepository.com/artifact/commons-io/commons-io
  compile group: 'commons-io', name: 'commons-io', version: '2.6'
  // https://mvnrepository.com/artifact/commons-collections/commons-collections
  compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
  

  // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
  compile group: 'com.zaxxer', name: 'HikariCP', version: '2.7.1'
  // https://mvnrepository.com/artifact/com.google.guava/guava
  compile group: 'com.google.guava', name: 'guava', version: '23.0'
  // https://mvnrepository.com/artifact/cglib/cglib
  compile group: 'cglib', name: 'cglib', version: '3.2.5'

  compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'

  // testCompile group: 'junit', name: 'junit', version: '4.11'
}

